{% extends 'user/layout.html.twig' %}
{% from 'macros.html.twig' import formButtons as formButtons %}


{% block header_h4 %}
  Créer un·e utilisateur·trice
{% endblock %}


{% block card_body %}
  {{ form_start(form) }}
    
    <div class="form-row">
      <div class="form-group col-sm-6">
        {{ form_row(form.firstName) }}
      </div>
      <div class="form-group col-sm-6">
        {{ form_row(form.lastName) }}
      </div>
    </div>

    <div class="form-row">
      <div class="form-group col-sm-4 mb-0">
        {{ form_row(form.username) }}
      </div>
      <div class="form-group col-sm-8 mb-0">
        {{ form_row(form.email, {'attr': {'readonly': 'true'}}) }}
      </div>
    </div>
     <div class="alert alert-danger mb-4">
      Vérifiez bien que <strong>l'adresse email est celle fournie par Habitat et Humanisme</strong>. Si ce n'est pas le cas, modifiez l'<a href="#user_username">identifiant</a>.
    </div>
    
    {# Category / roles #}
    <div class="form-row align-items-start">
      <div class="form-group col-sm-4">
        {{ form_row(form.category) }}
      </div>
      {#<div class="form-group col-sm d-flex justify-content-sm-center">#}
        {#<div>#}
          {#{{ form_row(form.activities) }}#}
        {#</div>#}
      {#</div>#}
    </div>

    {# Password #}
    <div class="alert alert-info">
      Par défaut le mot de passe initial est égal à l'<strong>identifiant</strong>, mais vous pouvez le modifier ci-dessous.
    </div>
    <div class="form-row align-items-end">
      <div class="form-group col-sm-6">
        {{ form_row(form.plainPassword.first) }}
      </div>
      <div class="form-group col-sm-6">
        {{ form_row(form.plainPassword.second) }}
      </div>
    </div>
    

    {{ form_widget(form.name, {'attr': {'hidden': 'true'}}) }}
    {{ form_widget(form.activities, {'attr': {'hidden': 'true'}}) }}

    <br>

    {# Buttons Submit / Cancel #}
    {{ formButtons(path('app_user_new'), 'Vider') }}
  {{ form_end(form) }}
{% endblock %}


{% block javascripts %}
  {{ parent() }}

  <script src="{{ asset('js/functions.js') }}"></script>

  <script>
    (function() {
      let firstNameInput = $('#user_firstName'),
          lastNameInput = $('#user_lastName'),
          nameInput = $('#user_name'),
          usernameInput = $('#user_username'),
          emailInput = $('#user_email'),
          categorySelect = $('#user_category'),
          activities = $('#user_activities .form-check-input'),
          firstPasswordInput = $('#user_plainPassword_first'),
          secondPasswordInput = $('#user_plainPassword_second');


      firstNameInput.on('input', formatFirstName);
      lastNameInput.on('input', formatLastName);

      firstNameInput.change(updateAllFields);
      lastNameInput.change(updateAllFields);
      usernameInput.change(updateEmailAndPassword);
      categorySelect.change(updateActivity);

      // Un-disable address, GLA and volunteer select to post data on form submit
      $('form').on('submit', () => {
        activities.removeAttr('disabled');
      });


      function formatFirstName() {
        let value = firstNameInput.val();
        value.replace(/\s+/g, '-');
        value = capitalizeFirstLetters(value);

        firstNameInput.val(value);
      }

      function formatLastName() {
        let value = lastNameInput.val();
        value = capitalizeText(value);

        lastNameInput.val(value);
      }

      function updateAllFields() {
        // Get first and last name
        let firstName = firstNameInput.val(),
            lastName = lastNameInput.val();

        if (firstName && lastName) {
          firstName = firstName.trim().replace(/\s+/g, '-');
          lastName = lastName.trim();

          updateName(firstName, lastName);
          updateUsername(firstName, lastName);
          updateEmailAndPassword();
        }
      }

      function updateName(firstName, lastName) {
        nameInput.val(capitalizeFirstLetters(firstName) + ' ' + lastName.toUpperCase());
      }

      function updateUsername(firstName, lastName) {
        let usernameParts = [],
            hyphenIndex = firstName.indexOf('-');

        if (hyphenIndex > -1) {
          // If first name is hyphenated (e.g. Jean-Michel), set username to jm.lastname
          usernameParts.push(firstName.toLowerCase().slice(0, 1) + firstName.toLowerCase().slice(hyphenIndex + 1, hyphenIndex + 2));
        } else {
          // Set username to f.lastname where f is first letter of first name
          usernameParts.push(firstName.toLowerCase().slice(0, 1));
        }
        usernameParts.push(lastName.toLowerCase().replace(/-|\s/g, ''));

        usernameInput.val(usernameParts.join('.'));
      }

      function updateEmailAndPassword() {
        let username = usernameInput.val();

        if (username) {
          emailInput.val(username + EMAIL_DOMAIN);

          firstPasswordInput.val(username);
          secondPasswordInput.val(username);
        }
      }

      function updateActivity() {
        if (getSelectedValue(categorySelect) === CATEGORY_GLA) {
          console.log(activities);
          activities.prop('checked', true)
                    .attr('disabled', true);
        } else {
          activities.prop('checked', false)
                    .removeAttr('disabled');
        }
      }

      function capitalizeFirstLetters(string) {
        let finalString,
            hyphenIndex = string.indexOf('-');

        if (hyphenIndex > -1) {
          let string1 = string.slice(0, hyphenIndex),
              string2 = string.slice(hyphenIndex + 1);
          finalString = capitalizeFirstLetters(string1) + '-' + capitalizeFirstLetters(string2);
        } else {
          finalString = string.charAt(0).toUpperCase() + string.slice(1);
        }

        return finalString;
      }
    })();
  </script>
{% endblock %}
