{% extends 'layout-large.html.twig' %}


{% block title %}
  Fiches mission - {{ parent() }}
{% endblock %}


{% block header_h2 %}
  Récapitulatif des fiches mission ouvertes <span id="recapMissionsBadge" class="badge badge-pill badge-danger"></span>
{% endblock %}

{% block header_button %}
  <a id="exportBtn" href="{{ path('app_mission_recap_pdf-export') }}" class="btn btn-primary" download hidden>
    <i class="fas fa-download"></i>
    Exporter au format PDF
  </a>
{% endblock %}


{% block content %}
  {# Search form #}
  {{ form_start(form) }}
  <div class="row justify-content-center">
    <div class="col-11 card bg-light py-3 mb-3">
      <div class="d-flex justify-content-between">
        {# Filter date created #}
        <div class="d-flex align-items-center">
          <small>Date demande entre le</small>
          <div class="input-group-sm input-date mx-2">
            {{ form_widget(form.dateCreatedMin, {'attr': {'placeholder': 'jj/mm/aaaa'}}) }}
          </div>
          <small>et le</small>
          <div class="input-group-sm input-date mx-2">
            {{ form_widget(form.dateCreatedMax, {'attr': {'placeholder': 'jj/mm/aaaa'}}) }}
          </div>
        </div>

        {# Form buttons #}
        <div >
          <input type="submit" class="btn btn-sm btn-outline-primary mr-2" id="searchSubmitBtn" value="Filtrer" />
          <button class="btn btn-sm btn-outline-secondary" id="searchResetBtn">Réinitialiser</button>
        </div>
      </div>
    </div>
  </div>

  {{ form_widget(form.gla, {'attr': {'hidden': 'true'}}) }}
  {{ form_widget(form.volunteer, {'attr': {'hidden': 'true'}}) }}
  {{ form_widget(form.accomodation, {'attr': {'hidden': 'true'}}) }}
  {{ form_widget(form.description, {'attr': {'hidden': 'true'}}) }}
  {{ form_widget(form.dateFinishedMin, {'attr': {'hidden': 'true'}}) }}
  {{ form_widget(form.dateFinishedMax, {'attr': {'hidden': 'true'}}) }}
  
  {{ form_end(form) }}

  {# Loading alert #}
  <div id="loadingAlert" class="alert alert-info text-center" role="alert">
    <i class="fas fa-spinner fa-spin"></i>
    Chargement en cours ...
  </div>

  {# Table #}
  <div class="table-responsive">
    <table class="table table-sm table-hover table-recap" hidden>
      <thead class="thead-light">
        <tr>
          <th scope="col" class="table-recap-id"># <i class="fas fa-sort"></i></th>
          <th scope="col" class="table-recap-date">Date demande <i class="fas fa-sort"></i></th>
          <th scope="col" class="table-recap-date">Provenance GLA <i class="fas fa-sort"></i></th>
          <th scope="col" class="table-recap-date">Date prise en charge <i class="fas fa-sort"></i></th>
          <th scope="col" class="table-recap-date">Date fin mission <i class="fas fa-sort"></i></th>
          <th scope="col" class="table-recap-address">Adresse <i class="fas fa-sort"></i></th>
          <th scope="col" class="table-recap-description">Description mission <i class="fas fa-sort"></i></th>
          <th scope="col" class="table-recap-date">Bénévole <i class="fas fa-sort"></i></th>
          <th scope="col" class="table-recap-description">Retour mission et conclusions <i class="fas fa-sort"></i></th>
          <th scope="col" class="table-recap-statut">Statut <i class="fas fa-sort"></i></th>
        </tr>
      </thead>

      <tbody>
        {# Filled by JavaScript #}
        {# id, dateCreated, GLA, dateAssigned, dateFinished, accomodation, description, volunteer, conclusions, status #}
      </tbody>
    </table>
  </div>

  <div id="noOpenedMissions" class="text-center font-weight-bold"></div>
{% endblock %}


{% block javascripts %}
  {{ parent() }}

  <script src="{{ asset('js/functions.js') }}"></script>
  <script src="{{ asset('js/ajax.js') }}"></script>
 
  <script>
    (function() {
      let table = document.querySelector('table'),
          dateCreatedMinInput = document.getElementById('mission_search_dateCreatedMin'),
          dateCreatedMaxInput = document.getElementById('mission_search_dateCreatedMax'),
          dateCreatedMin, dateCreatedMax,
          exportBtn = document.getElementById('exportBtn'),
          loadingAlert = document.getElementById('loadingAlert'),
          noOpenedMissionsDiv = document.getElementById('noOpenedMissions');


      // Add table sorting on clicking on one of its header
      tableHeadRows = document.querySelectorAll('th');
      
      for(let i = 0, c = tableHeadRows.length; i < c; i++) {
        tableHeadRows[i].addEventListener('click', () => {
          sortTable(table, i);
        });
      }


      // Fill recap missions table on load
      document.addEventListener('DOMContentLoaded', () => {
        fillRecapMissionsTable();
      });

      // Filter recap missions table on search form submit
      document.getElementById('searchSubmitBtn').addEventListener('click', (e) => {
        e.preventDefault();
        fillRecapMissionsTable();
      });

      // Reset recap missions table on reset button click
      document.getElementById('searchResetBtn').addEventListener('click', (e) => {
        e.preventDefault();

        // Reset date inputs
        dateCreatedMinInput.value = '';
        dateCreatedMaxInput.value = '';

        // Reset table
        fillRecapMissionsTable();
      });


      // Retrieve filters from search form, get matching missions from backend, fill in table, update number of missions and update link to pdf export
      function fillRecapMissionsTable() {
        // Hide message
        noOpenedMissionsDiv.innerHTML = '';

        // Show loading alert
        loadingAlert.removeAttribute('hidden');

        // Retrieve filters
        dateCreatedMin = formatStringToDate(dateCreatedMinInput.value);
        dateCreatedMax = formatStringToDate(dateCreatedMaxInput.value);

        // Send filters to controller
        ajaxPost("{{ path('app_mission_filter') }}", {'dateCreatedMin': dateCreatedMin, 'dateCreatedMax': dateCreatedMax}, JSONResponse => {
            // Retrieve missions matching filters
            let data = JSON.parse(JSONResponse);
            
            // Empty table body
            let tbody = document.querySelector('tbody');
                tbody.innerHTML = '';

            if (data) {
              let missions = data.missions;

              // Fill table body with missions
              missions.forEach( mission => {
                tbody.appendChild(createMissionRow(mission));
              });

              // Update badge with number of missions
              document.getElementById('recapMissionsBadge').innerHTML = missions.length;

              // Update link to pdf export
              exportBtn.href = data.recap.url;

              // Unhide table and export button
              table.removeAttribute('hidden');
              exportBtn.removeAttribute('hidden');
            } else {
              // Display message
              noOpenedMissionsDiv.innerHTML = 'Aucune mission à afficher !';
            }

            // Hide loading alert
            loadingAlert.setAttribute('hidden', 'true');
        });
      }

      // Return tr element with mission details, ready to append to table body
      function createMissionRow(mission) {
        // Row
        let tr = document.createElement('tr');

        // Cells
        let tdId = document.createElement('td'),
            aId = document.createElement('a');

        aId.href = mission.url;
        aId.title = 'Voir la FM';
        aId.innerHTML = mission.id

        tdId.appendChild(aId);

        let tdDC = document.createElement('td'),
            strongDC = document.createElement('strong');

        strongDC.innerHTML = mission.dateCreated;

        tdDC.appendChild(strongDC);
        tdDC.setAttribute('data-is-date', 'true');

        let tdGla = document.createElement('td');
            tdGla.innerHTML = mission.glaName;

        let tdDA = document.createElement('td');
            tdDA.innerHTML = mission.dateAssigned ? mission.dateAssigned : '-';
            tdDA.setAttribute('data-is-date', 'true');

        let tdDF = document.createElement('td');
            tdDF.innerHTML = mission.dateFinished ? mission.dateFinished : '-';
            tdDF.setAttribute('data-is-date', 'true');

        // Address
        let tdAcc = document.createElement('td');

        tdAcc.innerHTML = mission.accomodationStreet + '<br>';

        if (mission.accomodationName) {
          tdAcc.innerHTML += mission.accomodationName + '<br>'; 
        }

        tdAcc.innerHTML += mission.accomodationPostalCode + ' ' + mission.accomodationCity;

        let tdDesc = document.createElement('td');
            tdDesc.innerHTML = mission.description;

        let tdVol = document.createElement('td');
            tdVol.innerHTML = mission.volunteerName;

        let tdConcl = document.createElement('td');
            tdConcl.innerHTML = mission.conclusions;

        let tdStat = document.createElement('td');
            tdStat.innerHTML = mission.status;
        
        // Append cells to row
        tr.appendChild(tdId);
        tr.appendChild(tdDC);
        tr.appendChild(tdGla);
        tr.appendChild(tdDA);
        tr.appendChild(tdDF);
        tr.appendChild(tdAcc);
        tr.appendChild(tdDesc);
        tr.appendChild(tdVol);
        tr.appendChild(tdConcl);
        tr.appendChild(tdStat);

        return tr;
      }
    })();
  </script>
{% endblock %}
