{% extends 'layout-large.html.twig' %}


{% block title %}
    Fiches mission - {{ parent() }}
{% endblock %}


{% block header_h2 %}
    Liste des fiches mission
{% endblock %}

{% block header_button %}
    {# new mission button only visible for gla (and admin) #}
    {% if is_granted('ROLE_GLA') %}
        <a href="{{ path('app_mission_new') }}" class="btn btn-success">
            <i class="fas fa-plus"></i>
            Créer une fiche mission
        </a>
    {% endif %}
{% endblock %}


{% block content %}
    {% include 'mission/search/by-id.html.twig' %}

    <hr>

    <div id="newMissions">
        <h3>Missions en attente <span class="nbOfMissions badge badge-pill badge-success"></span></h3>

        {% include 'loading.html.twig' %}

        <table class="table table-hover">
            <thead class="thead-light">
            <tr>
                <th scope="col">N° <i class="fas fa-sort"></i></th>
                <th scope="col">Demande <i class="fas fa-sort"></i></th>
                <th scope="col">Provenance GLA <i class="fas fa-sort"></i></th>
                <th scope="col">Adresse <i class="fas fa-sort"></i></th>
                <th scope="col">Description mission <i class="fas fa-sort"></i></th>
                <th></th>
            </tr>
            </thead>

            <tbody>
            {# Filled by JavaScript #}
            {# id, dateCreated, gla, address, description, button to view #}
            </tbody>
        </table>

        {% include 'mission/no-mission-div.html.twig' %}
    </div>

    <hr>

    <div id="assignedMissions">
        <h3>Missions en cours <span class="nbOfMissions badge badge-pill badge-success"></span></h3>

        {% include 'mission/checkbox-my-missions.html.twig' %}

        {% include 'loading.html.twig' %}

        <table class="table table-hover">
            <thead class="thead-light">
            <tr>
                <th scope="col">N° <i class="fas fa-sort"></i></th>
                <th scope="col">Demande <i class="fas fa-sort"></i></th>
                <th scope="col">Prise en charge <i class="fas fa-sort"></i></th>
                <th scope="col">Provenance GLA <i class="fas fa-sort"></i></th>
                <th scope="col">Adresse <i class="fas fa-sort"></i></th>
                <th scope="col">Bénévole <i class="fas fa-sort"></i></th>
                <th scope="col">Description <i class="fas fa-sort"></i></th>
                <th></th>
            </tr>
            </thead>

            <tbody>
            {# Filled by JavaScript #}
            {# id, dateCreated, dateAssigned, gla, address, volunteer, description, button to view #}
            </tbody>
        </table>

        {% include 'mission/no-mission-div.html.twig' %}
    </div>

    <hr>

    <div id="finishedMissions">
        <h3>Missions terminées <span class="nbOfMissions badge badge-pill badge-success"></span></h3>

        {% include 'mission/search/default.html.twig' %}

        {% include 'mission/checkbox-my-missions.html.twig' %}

        {% include 'loading.html.twig' %}

        {# Table #}
        <table class="table table-hover">
            <thead class="thead-light">
              <tr>
                <th scope="col">N° <i class="fas fa-sort"></i></th>
                <th scope="col">Demande <i class="fas fa-sort"></i></th>
                <th scope="col">Fin de mission <i class="fas fa-sort"></i></th>
                <th scope="col">Provenance GLA <i class="fas fa-sort"></i></th>
                <th scope="col">Adresse <i class="fas fa-sort"></i></th>
                <th scope="col">Bénévole <i class="fas fa-sort"></i></th>
                <th scope="col">Description <i class="fas fa-sort"></i></th>
                <th class="d-none"></th>
                <th></th>
              </tr>
            </thead>

            <tbody>
              {# Filled by JavaScript #}
              {# id, dateCreated, dateFinished, gla, address, volunteer, description, button to view #}
            </tbody>
        </table>

        {% include 'mission/no-mission-div.html.twig' %}
    </div>

    <br>
{% endblock %}


{% block javascripts %}
    {{ parent() }}

    <script src="{{ asset('js/functions.js') }}"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery.tablesorter/2.31.0/js/jquery.tablesorter.js"></script>

    <script>
        (function() {
            let userId = {{ app.user.id }};

            $(function() {
                let newMissionsTable = $('table', $('#newMissions')),
                    assignedMissionsTable = $('table', $('#assignedMissions')),
                    finishedMissionsTable = $('table', $('#finishedMissions'));

                addMissionsSorting([newMissionsTable, assignedMissionsTable, finishedMissionsTable]);
                activateMyMissionsFilter();
                displayNumberOfCheckedOptionsInBadges();
                fillNewMissionsTable();
                fillAssignedMissionsTable();
                fillFinishedMissionsTable();
                filterFinishedMissionsWithSearch();


                /**
                 * "My missions" checkbox behavior:
                 *
                 * If one of myMissions checkbox is checked
                 * - check both checkboxes
                 * - show only missions where user is gla and/or volunteer
                 * - hide other missions
                 *
                 * If one of myMissions checkbox is unchecked
                 * - uncheck both checkboxes
                 * - show all missions
                 */
                function activateMyMissionsFilter() {
                    $('.myMissions').each((index, element) => {
                        $(element).change(e => {
                            let checkbox = $(e.target),
                                checked = checkbox.prop('checked'),
                                table = $('table', checkbox.parent().parent());

                            if (checked) {
                                showOnlyMyMissions(table);
                            } else {
                                showAllMissions(table);
                            }
                        });
                    });
                }

                function showOnlyMyMissions(table) {
                    $('.mission', table).each((index, row) => {
                        if (!isUserMission(row)) {
                            $(row).hide();
                        }
                    });
                }

                function isUserMission(row) {
                    return $('.volunteer-' + userId, row).length || $('.gla-' + userId, row).length;
                }

                function showAllMissions(table) {
                    $('.mission', table).show();
                }

                /**
                 * New missions table
                 */
                function fillNewMissionsTable() {
                    let url = "{{ path('app_mission_filter') }}",
                        filters = getNewMissionsFilters();

                    fillMissionsTable(newMissionsTable, filters, url, newMissionsCallback);
                }

                function getNewMissionsFilters() {
                    let activity = "{{ constant('App\\Utils\\Constant::PA_GLA') }}",
                        status = "{{ constant('App\\Utils\\Constant::STATUS_DEFAULT') }}";

                    return {
                        'activity': activity,
                        'statuses': status
                    }
                }

                function newMissionsCallback(data) {
                    let missions = data.missions,
                        properties = ['id', 'dateCreated', 'gla', 'address', 'description', 'button'];

                    return [missions, properties];
                }

                /**
                 * Assigned missions table
                 */
                function fillAssignedMissionsTable() {
                    let url = "{{ path('app_mission_filter') }}",
                        filters = getAssignedMissionsFilters();

                    fillMissionsTable(assignedMissionsTable, filters, url, assignedMissionsCallback);
                }

                function getAssignedMissionsFilters() {
                    let activity = "{{ constant('App\\Utils\\Constant::PA_GLA') }}",
                        status = "{{ constant('App\\Utils\\Constant::STATUS_ASSIGNED') }}";

                    return {
                        'activity': activity,
                        'statuses': status
                    }
                }

                function assignedMissionsCallback(data) {
                    let missions = data.missions,
                        properties = ['id', 'dateCreated', 'dateAssigned', 'gla', 'address', 'volunteer', 'description', 'button'];

                    return [missions, properties];
                }

                /**
                 * Finished missions table
                 */
                function fillFinishedMissionsTable() {
                    let url = "{{ path('app_mission_filter') }}",
                        filters = getFinishedMissionsFilters();

                    fillMissionsTable(finishedMissionsTable, filters, url, finishedMissionsCallback);
                }

                function getFinishedMissionsFilters() {
                    let descriptionInput = $('#mission_search_description'),
                        dateCreatedMinInput = $('#mission_search_dateCreatedMin'),
                        dateCreatedMaxInput = $('#mission_search_dateCreatedMax'),
                        dateFinishedMinInput = $('#mission_search_dateFinishedMin'),
                        dateFinishedMaxInput = $('#mission_search_dateFinishedMax');

                    // Get filters values
                    let glaIds = getCheckedOptionsValues($('#mission_search_gla')),
                        volunteerIds = getCheckedOptionsValues($('#mission_search_volunteer')),
                        addressIds = getCheckedOptionsValues($('#mission_search_address')),
                        descriptionSearch = descriptionInput.val().trim(),
                        dateCreatedMin = formatStringToDate(dateCreatedMinInput.val()),
                        dateCreatedMax = formatStringToDate(dateCreatedMaxInput.val()),
                        dateFinishedMin = formatStringToDate(dateFinishedMinInput.val()),
                        dateFinishedMax = formatStringToDate(dateFinishedMaxInput.val());

                    let activity = "{{ constant('App\\Utils\\Constant::PA_GLA') }}",
                        statuses = "{{ constant('App\\Utils\\Constant::STATUS_FINISHED') }}" + "|" + "{{ constant('App\\Utils\\Constant::STATUS_CLOSED') }}";

                    return {
                        'activity': activity,
                        'statuses': statuses,
                        'glaIds': glaIds,
                        'volunteerIds': volunteerIds,
                        'addressIds': addressIds,
                        'descriptionSearch': descriptionSearch,
                        'dateCreatedMin': dateCreatedMin,
                        'dateCreatedMax': dateCreatedMax,
                        'dateFinishedMin': dateFinishedMin,
                        'dateFinishedMax': dateFinishedMax
                    };
                }

                function finishedMissionsCallback(data) {
                    // Split missions by status
                    let missions = data.missions,
                        finishedMissions = [],
                        closedMissions = [];

                    missions.forEach(mission => {
                        if (mission.status === "{{ constant('App\\Utils\\Constant::STATUS_FINISHED') }}") {
                            finishedMissions.push(mission);
                        } else {
                            closedMissions.push(mission);
                        }
                    });

                    let properties = ['id', 'dateCreated', 'dateFinished', 'gla', 'address', 'volunteer', 'description', 'button'];

                    missions = finishedMissions.concat(closedMissions);

                    return [missions, properties];
                }

                function filterFinishedMissionsWithSearch() {
                    $('#searchSubmitBtn').click(e => {
                        e.preventDefault();
                        fillFinishedMissionsTable();
                    });
                }
            });
        })();
    </script>
{% endblock %}
